## k8sマスタを初期化
#
- name: "kubeadm reset v1.11 or later"
  command: kubeadm reset -f

## クラスタ参加用のコマンドを作成 Ubuntu
- name: kubeadm init for Ubuntu
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ ansible_facts.enp0s8.ipv4.address }} --service-cidr=10.32.0.0/24
  register: join_ubuntu
  when:
    - ansible_facts.distribution == "Ubuntu"

- debug: msg="{{ join_ubuntu }}"

## k8sノード用コマンドを保存（マスターノード用）Ubuntu
- name: create kubeadm join command for control plane
  shell: echo "ctrl_join_command" ":" {{ join_ubuntu.stdout_lines[-2] }} {{ join_ubuntu.stdout_lines[-1] }} " --experimental-control-plane" > /tmp/kubeadm-join-control.yaml
  when:
    - ansible_facts.distribution == "Ubuntu"

## k8sノード用コマンドを保存（ワーカーノード用）Ubuntu
- name: create kubeadm join command
  shell: echo "join_command" ":" {{ join_ubuntu.stdout_lines[-2] }} {{ join_ubuntu.stdout_lines[-1] }} > /tmp/kubeadm-join.yaml
  when:
    - ansible_facts.distribution == "Ubuntu"



## クラスタ参加用のコマンドを作成 CentOS
# インタフェース名が Ubuntu と CentOSで異なるために個別に必要、改良の余地あり
- name: kubeadm init for CentOS
  command: kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address={{ ansible_facts.eth1.ipv4.address }} --service-cidr=10.32.0.0/24
  register: join_centos
  when:
    - ansible_facts.distribution == "CentOS"
## k8sノード用コマンドを保存 CentOS
- name: create kubeadm join command
  shell: echo "join_command" ":" {{ join_centos.stdout_lines[-2] }} {{ join_centos.stdout_lines[-1] }} > /tmp/kubeadm-join.yaml
  when:
    - ansible_facts.distribution == "CentOS"


## vagrantのディレクトリへコピー
##                                terraformを使う場合は修正
- name: copy /tmp/kubeadm-join.yaml -> home
  command: cp /tmp/kubeadm-join.yaml /vagrant/kubeadm-join.tmp
- name: copy /tmp/kubeadm-join-control.yaml -> home
  command: cp /tmp/kubeadm-join-control.yaml /vagrant/kubeadm-join-control.tmp

## Kubernetesの証明書をコピー
##
- name: copy kubernetes pki files to vagrant host
  shell: |
    cp /etc/kubernetes/pki/ca.crt /vagrant/k8s-pki
    cp /etc/kubernetes/pki/ca.key /vagrant/k8s-pki
    cp /etc/kubernetes/pki/sa.key /vagrant/k8s-pki
    cp /etc/kubernetes/pki/sa.pub /vagrant/k8s-pki
    cp /etc/kubernetes/pki/front-proxy-ca.crt /vagrant/k8s-pki
    cp /etc/kubernetes/pki/front-proxy-ca.key /vagrant/k8s-pki
    cp /etc/kubernetes/pki/etcd/ca.crt /vagrant/k8s-pki/etcd-ca.crt
    cp /etc/kubernetes/pki/etcd/ca.key /vagrant/k8s-pki/etcd-ca.key
    cp /etc/kubernetes/admin.conf /vagrant/k8s-pki



## kubeletのDNSのIPアドレスを変更
#
- name: change config.yaml
  replace:
    dest: /var/lib/kubelet/config.yaml
    regexp: '10.96.0.10'
    replace: 10.32.0.10

## kubeletをリスタートして変更を反映
#
- name: daemon-reload and restart kubelet
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet
    
## kubeconfigディレクトリ作成
#
- name: mkdir kubeconfig
  file:
    path:  /home/vagrant/.kube
    state: directory
    owner: vagrant
    group: vagrant
    mode:  '0755'

- name: mkdir /vagrant/kubeconfig
  file:
    path:  /vagrant/kubeconfig
    state: directory
    owner: vagrant
    group: vagrant
    mode:  '0755'

##  configファイルのコピー
#
- name: chmod admin.conf
  file:
    path:  /etc/kubernetes/admin.conf
    owner: vagrant
    group: vagrant
    mode:  '0600'
    
- name: copy config to home dir
  copy:
    src:  /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    owner: vagrant
    group: vagrant
    mode:  '0600'

## flannelのコピー
#
- set_fact:
    interface: enp0s8
  when:
    - ansible_facts.distribution == "Ubuntu"
- set_fact:
    interface: eth1
  when:
    - ansible_facts.distribution == "CentOS"

- name: copy a manifest of Flannel for k8s ver > 11
  template:
    src:  kube-flannel.yml.j2
    dest: /home/vagrant/kube-flannel.yml
    mode: 0644
    owner: vagrant
    group: vagrant

## Flannelのデプロイ
#
- name: Deploy Flannel
  shell: |
        kubectl apply -f kube-flannel.yml
  args:
    chdir: /home/vagrant
  become_user: vagrant



